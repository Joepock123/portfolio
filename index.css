* {
    box-sizing: border-box;
    font-size: 100%;
}

:root {
    --green: #164D59;
    --yellow: #F2D377;
    --lightBrown: #F2994B;
    --orange: #F26513;
    --primary: #A6351C;
    --secondary: #1c1b20;
    --bg: #f8f8f8;
    --animation-props: all 1s 1.5s;
}

body {
    max-width: 95vw;
    margin: 0 auto;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;
}

a {
    color: inherit;
    text-decoration: none;
    font-size: inherit;    
}

img:hover {
    background: var(--primary);
}



header, footer {
    display: flex;
    align-items: center;    
    font-size: 1.5rem;

}

footer {
    padding: 0.5rem;
    justify-content: space-between;
}

.hero__section {
    display: flex;
    height: 80vh;
}

.hero__div-content {
    background: var(--bg);
    width: 50%;
    padding: 1rem;
    transition: var(--animation-props);
}

.hero__div-content > h1 {
    font-size: 1rem;
}

.hero__div-image {
    background-image: url(./img/hero-1.JPG);
    background-size: cover;
    background-position: right;    
    width: 50%;
    transition: var(--animation-props);
}

.hero__div-image:hover {
    filter: grayscale(0%);
    transition: all 1s;
}

.hero__h1--1, .hero__h1--2, .hero__h1--3, .hero__h1--4, .hero__h1--9 {
    padding-left: 1rem;    
} 

.hero__h1--5, .hero__h1--6, .hero__h1--7, .hero__h1--8 {
    padding-left: 2rem;
    color: var(--primary)
}

.hero__div-image--loaded {
    filter: grayscale(90%);
}

@media only screen and (max-width: 600px) {
    .hero__section {
        /* flex-direction: column; */
    }

    .hero__div-content {
        width: 80%;
        /* background: #A6351C; */
        /* height: 50%; */
    }
    
    .hero__div-image {
        width: 20%;
        background:var(--primary);
        /* height: 50%; */
    }
}








.svg-icon {
    /* Place the icon on the text baseline. */
    position: relative;
    top: .125em;

    /* Prevent the icon from shrinking inside a flex container. */
    flex-shrink: 0;

    /* Scale the icon to match the font-size of the parent element. */
    height: 1em;
    width: 1em;

    /* Let the icon take whatever color the parent has. */
    fill: currentColor;

    /*
     * If the icon is used on a link, which has a color transition,
     * we can also use a transition on the fill value.
    */
   transition: fill .3s;
   z-index: 1000;
}

.svg-icon:hover {
    color: var(--primary);
}