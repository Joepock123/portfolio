* {
    box-sizing: border-box;
    font-size: 100%;
}

:root {
    --yellow: #F2D377;
    --primary: #A6351C;
    --secondary: #1c1b20;
    --bg: #f8f8f8;
}

body {
    max-width: 95vw;
    margin: 0 auto;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;
}

a {
    color: inherit;
    text-decoration: none;
    font-size: inherit;    
}

a:hover {
    color: var(--primary);
}

header, footer {
    display: flex;
    align-items: center;    
    font-size: 1.5rem;

}

footer {
    padding: 0.5rem 0;
    justify-content: flex-end;
}

footer > a {
    padding-left: 0.5rem;
}

.hero__section {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 90vh;
}

.hero__div-container {
    background: var(--bg);
    padding: 0 1rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.hero__div-content > h1 {
    font-size: 1rem;
}

.hero__div-icon {    
    align-self: center;
}

.hero__div-icon {
    font-size: 2rem;
    animation: bouncing 0.7s 10s infinite alternate;
}

.hero__div-image {
    background-image: url(./img/hero-1.JPG);
    background-size: cover;
    background-position: right;
    transition: filter 1s 0.5s;
}

.hero__div-image:hover {
    filter: grayscale(0%);
    transition: all 0.5s;
}

.hero__h1--1, .hero__h1--2, .hero__h1--3, .hero__h1--4, .hero__h1--9 {
    padding-left: 1rem;
} 

.hero__h1--5, .hero__h1--6, .hero__h1--7, .hero__h1--8 {
    padding-left: 2rem;
    color: var(--primary)
}

.hero__div-image--loaded {
    filter: grayscale(90%);
}

.svg-icon {
    /* Place the icon on the text baseline. */
    position: relative;
    top: .125em;    

    /* Prevent the icon from shrinking inside a flex container. */
    flex-shrink: 0;

    /* Scale the icon to match the font-size of the parent element. */
    height: 1em;
    width: 1em;

    /* Let the icon take whatever color the parent has. */
    fill: currentColor;

    /*
     * If the icon is used on a link, which has a color transition,
     * we can also use a transition on the fill value.
    */
   transition: fill .3s;
   z-index: 1000;
}

.svg-icon:hover {
    color: var(--primary);
}



/* MEDIA QUERIES */

@media only screen and (max-width: 600px) {
    .hero__section {
        grid-template-columns: repeat(5, 1fr);
    }

    .hero__div-container {
        grid-column: 1 / 5;
    }
    
    .hero__div-image {
        grid-column: 5 / 6;
        background:var(--primary);
    }

}



/* ANIMATIONS */

@keyframes bouncing {
    0% { transform: translateY(0); }
    100% { transform: translateY(-25px); }
}